start_year:              @[SYEAR]
start_month:             @[SMONTH]
start_day:               @[SDAY]
start_hour:              @[SHOUR]
start_minute:            0
start_second:            0
nhours_fcst:             @[FHMAX]
dt_atmos:                @[DT_ATMOS]
calendar:                'julian'
restart_interval:        @[RESTART_INTERVAL]
output_1st_tstep_rst:    .false.

quilting:                @[QUILTING]
write_groups:            @[WRITE_GROUP]
write_tasks_per_group:   @[WRTTASK_PER_GROUP]
num_files:               @[NUM_FILES]
filename_base:           @[FILENAME_BASE]
output_file:             @[OUTPUT_FILE]
write_dopost:            @[WRITE_DOPOST]
ichunk2d:                -1
jchunk2d:                -1
ichunk3d:                -1
jchunk3d:                -1
kchunk3d:                -1
ideflate:                @[IDEFLATE]
nbits:                   @[NBITS]

output_grid:             @[OUTPUT_GRID]     # gaussian_grid, global_latlon, regional_latlon, rotated_latlon, lambert_conformal
imo:                     @[IMO]             # number of grid points along longitude/latitude direction
jmo:                     @[JMO]             # needed for gaussian_grid or global_latlon
cen_lon:                 @[CEN_LON]         # central longitude/latitude (degrees)
cen_lat:                 @[CEN_LAT]         # needed for regional_latlon, rotated_latlon, lambert_conformal
lon1:                    @[LON1]            # longitude/latitude of lower-left corner
lat1:                    @[LAT1]            # needed for regional_latlon, rotated_latlon, lambert_conformal
lon2:                    @[LON2]            # longitude/latitude of upper-right corner
lat2:                    @[LAT2]            # needed for regional_latlon, rotated_latlon
dlon:                    @[DLON]            # grid spacing in longitude/latitude direction (degrees)
dlat:                    @[DLAT]            # needed for regional_latlon, rotated_latlon
stdlat1:                 @[STDLAT1]         # latitude of first/second standard parallel (degrees)
stdlat2:                 @[STDLAT2]         # needed for lambert_conformal
nx:                      @[NX_LC]           # number of grid cells along x/y-axis
ny:                      @[NY_LC]           # needed for lambert_conformal
dx:                      @[DX_LC]           # grid cell size in x/y direction (meters)
dy:                      @[DY_LC]           # needed for lambert_conformal

<output_grid_02>
output_grid:             @[OUTPUT_GRID_2]   # gaussian_grid, global_latlon, regional_latlon, rotated_latlon, lambert_conformal
imo:                     @[IMO_2]           # number of grid points along longitude/latitude direction
jmo:                     @[JMO_2]           # needed for gaussian_grid or global_latlon
cen_lon:                 @[CEN_LON_2]       # central longitude/latitude (degrees)
cen_lat:                 @[CEN_LAT_2]       # needed for regional_latlon, rotated_latlon, lambert_conformal
lon1:                    @[LON1_2]          # longitude/latitude of lower-left corner
lat1:                    @[LAT1_2]          # needed for regional_latlon, rotated_latlon, lambert_conformal
lon2:                    @[LON2_2]          # longitude/latitude of upper-right corner
lat2:                    @[LAT2_2]          # needed for regional_latlon, rotated_latlon
dlon:                    @[DLON_2]          # grid spacing in longitude/latitude direction (degrees)
dlat:                    @[DLAT_2]          # needed for regional_latlon, rotated_latlon
stdlat1:                 @[STDLAT1_2]       # latitude of first/second standard parallel (degrees)
stdlat2:                 @[STDLAT2_2]       # needed for lambert_conformal
nx:                      @[NX_LC_2]         # number of grid cells along x/y-axis
ny:                      @[NY_LC_2]         # needed for lambert_conformal
dx:                      @[DX_LC_2]         # grid cell size in x/y direction (meters)
dy:                      @[DY_LC_2]         # needed for lambert_conformal
</output_grid_02>

<output_grid_03>
output_grid:             @[OUTPUT_GRID_3]   # gaussian_grid, global_latlon, regional_latlon, rotated_latlon, lambert_conformal
imo:                     @[IMO_3]           # number of grid points along longitude/latitude direction
jmo:                     @[JMO_3]           # needed for gaussian_grid or global_latlon
cen_lon:                 @[CEN_LON_3]       # central longitude/latitude (degrees)
cen_lat:                 @[CEN_LAT_3]       # needed for regional_latlon, rotated_latlon, lambert_conformal
lon1:                    @[LON1_3]          # longitude/latitude of lower-left corner
lat1:                    @[LAT1_3]          # needed for regional_latlon, rotated_latlon, lambert_conformal
lon2:                    @[LON2_3]          # longitude/latitude of upper-right corner
lat2:                    @[LAT2_3]          # needed for regional_latlon, rotated_latlon
dlon:                    @[DLON_3]          # grid spacing in longitude/latitude direction (degrees)
dlat:                    @[DLAT_3]          # needed for regional_latlon, rotated_latlon
stdlat1:                 @[STDLAT1_3]       # latitude of first/second standard parallel (degrees)
stdlat2:                 @[STDLAT2_3]       # needed for lambert_conformal
nx:                      @[NX_LC_3]         # number of grid cells along x/y-axis
ny:                      @[NY_LC_3]         # needed for lambert_conformal
dx:                      @[DX_LC_3]         # grid cell size in x/y direction (meters)
dy:                      @[DY_LC_3]         # needed for lambert_conformal
</output_grid_03>

<output_grid_04>
output_grid:             @[OUTPUT_GRID_4]   # gaussian_grid, global_latlon, regional_latlon, rotated_latlon, lambert_conformal
imo:                     @[IMO_4]           # number of grid points along longitude/latitude direction
jmo:                     @[JMO_4]           # needed for gaussian_grid or global_latlon
cen_lon:                 @[CEN_LON_4]       # central longitude/latitude (degrees)
cen_lat:                 @[CEN_LAT_4]       # needed for regional_latlon, rotated_latlon, lambert_conformal
lon1:                    @[LON1_4]          # longitude/latitude of lower-left corner
lat1:                    @[LAT1_4]          # needed for regional_latlon, rotated_latlon, lambert_conformal
lon2:                    @[LON2_4]          # longitude/latitude of upper-right corner
lat2:                    @[LAT2_4]          # needed for regional_latlon, rotated_latlon
dlon:                    @[DLON_4]          # grid spacing in longitude/latitude direction (degrees)
dlat:                    @[DLAT_4]          # needed for regional_latlon, rotated_latlon
stdlat1:                 @[STDLAT1_4]       # latitude of first/second standard parallel (degrees)
stdlat2:                 @[STDLAT2_4]       # needed for lambert_conformal
nx:                      @[NX_LC_4]         # number of grid cells along x/y-axis
ny:                      @[NY_LC_4]         # needed for lambert_conformal
dx:                      @[DX_LC_4]         # grid cell size in x/y direction (meters)
dy:                      @[DY_LC_4]         # needed for lambert_conformal
</output_grid_04>

<output_grid_05>
output_grid:             @[OUTPUT_GRID_5]   # gaussian_grid, global_latlon, regional_latlon, rotated_latlon, lambert_conformal
imo:                     @[IMO_5]           # number of grid points along longitude/latitude direction
jmo:                     @[JMO_5]           # needed for gaussian_grid or global_latlon
cen_lon:                 @[CEN_LON_5]       # central longitude/latitude (degrees)
cen_lat:                 @[CEN_LAT_5]       # needed for regional_latlon, rotated_latlon, lambert_conformal
lon1:                    @[LON1_5]          # longitude/latitude of lower-left corner
lat1:                    @[LAT1_5]          # needed for regional_latlon, rotated_latlon, lambert_conformal
lon2:                    @[LON2_5]          # longitude/latitude of upper-right corner
lat2:                    @[LAT2_5]          # needed for regional_latlon, rotated_latlon
dlon:                    @[DLON_5]          # grid spacing in longitude/latitude direction (degrees)
dlat:                    @[DLAT_5]          # needed for regional_latlon, rotated_latlon
stdlat1:                 @[STDLAT1_5]       # latitude of first/second standard parallel (degrees)
stdlat2:                 @[STDLAT2_5]       # needed for lambert_conformal
nx:                      @[NX_LC_5]         # number of grid cells along x/y-axis
ny:                      @[NY_LC_5]         # needed for lambert_conformal
dx:                      @[DX_LC_5]         # grid cell size in x/y direction (meters)
dy:                      @[DY_LC_5]         # needed for lambert_conformal
</output_grid_05>

<output_grid_06>
output_grid:             @[OUTPUT_GRID_6]   # gaussian_grid, global_latlon, regional_latlon, rotated_latlon, lambert_conformal
imo:                     @[IMO_6]           # number of grid points along longitude/latitude direction
jmo:                     @[JMO_6]           # needed for gaussian_grid or global_latlon
cen_lon:                 @[CEN_LON_6]       # central longitude/latitude (degrees)
cen_lat:                 @[CEN_LAT_6]       # needed for regional_latlon, rotated_latlon, lambert_conformal
lon1:                    @[LON1_6]          # longitude/latitude of lower-left corner
lat1:                    @[LAT1_6]          # needed for regional_latlon, rotated_latlon, lambert_conformal
lon2:                    @[LON2_6]          # longitude/latitude of upper-right corner
lat2:                    @[LAT2_6]          # needed for regional_latlon, rotated_latlon
dlon:                    @[DLON_6]          # grid spacing in longitude/latitude direction (degrees)
dlat:                    @[DLAT_6]          # needed for regional_latlon, rotated_latlon
stdlat1:                 @[STDLAT1_6]       # latitude of first/second standard parallel (degrees)
stdlat2:                 @[STDLAT2_6]       # needed for lambert_conformal
nx:                      @[NX_LC_6]         # number of grid cells along x/y-axis
ny:                      @[NY_LC_6]         # needed for lambert_conformal
dx:                      @[DX_LC_6]         # grid cell size in x/y direction (meters)
dy:                      @[DY_LC_6]         # needed for lambert_conformal
</output_grid_06>

nfhout:                  @[NFHOUT]          # Output frequency in hours after forecast hour nfhmax_hf
nfhmax_hf:               @[NFHMAX_HF]       # Number of forecast hours until output frequency nfhout takes affect
nfhout_hf:               @[NFHOUT_HF]       # Output frequency in hours until forecast hour nfhmax_hf
nsout:                   @[NSOUT]           # Output frequency in time steps (positive values override nfhout and nfhout_hf)
output_fh:               @[OUTPUT_FH]       # Output forecast hours controlled by output_fh (see notes below)
# a) An array of output_fh means to output history files at those forecast time (e.g., "output_fh: 0 1 2 3 12 24 48")
#    If the first elelment is zero, it means the first time step output
# b) If there are two elements in output_fh and the second one is -1, then the first element is output frequency. e.g.
#    For example, "output_fh: 6 -1" will output the history file every 6 hours.
